{% extends 'base.html.twig' %}

{% block title %}Page d'appel - U10{% endblock %}

{% block body %}
<div class="col-lg-8 mx-auto p-5 py-md-5">
    <div class="mt-3 text-center">
        <h1 class="h1 mb-2">Page d'appel - U10</h1>
    </div>

    <div class="row row-cols-2 row-cols-md-2 row-cols-lg-4 g-4 pt-5">
        {% for user in users %}
            <div class="col">
                <div class="img" data-user-id="{{ user.id }}">
                    <div class="abs"><img src="/images/arthur-delacour.png" class="card-img-top zoom abs" alt="..."></div>
                    <div class="card-body">
                        <p class="card-text text-center">{{ user.firstName }}
                            {{ user.lastName }}
                            ({{ user.getCategory }})
                            <br>
                            {{ user.dateNaissance|date('Y') }}
                        </p>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>

    <div class="g-4 pt-5 text-center">
        <button class="btn btn-primary" id="finaliserAppel" action="{{ path('update_matches_played') }}">Finaliser l'appel</button>
    </div>
</div>

<script>
    // JavaScript to add click event listeners to each abs
    document.addEventListener('DOMContentLoaded', function () {
        const abss = document.querySelectorAll('.abs');
        const selectedUserIds = [];

        abss.forEach(abs => {
            abs.addEventListener('click', function () {
                // Toggle the 'selected-abs' class to change the color
                abs.classList.toggle('selected-abs');
                
                // Update the selectedUserIds array
                if (abs.classList.contains('selected-abs')) {
                    selectedUserIds.push(abs.closest('.img').getAttribute('data-user-id'));
                } else {
                    const index = selectedUserIds.indexOf(abs.closest('.img').getAttribute('data-user-id'));
                    if (index !== -1) {
                        selectedUserIds.splice(index, 1);
                    }
                }
            });
        });

        // Function to finalize attendance and send a POST request
        function finalizeAttendance() {
            // Send a POST request to update matches_played
            fetch('{{ path('update_matches_played') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ selectedUserIds: selectedUserIds }),
            })
            .then(response => {
                if (response.ok) {
                    // Handle a successful response (you can customize this based on your needs).
                    alert('Matches played updated successfully');
                } else {
                    // Handle errors or other responses.
                    alert('Failed to update matches played');
                }
            });
        }

        // Attach the finalizeAttendance function to the button click event
        document.getElementById('finaliserAppel').addEventListener('click', finalizeAttendance);
    });
</script>

{% endblock %}
