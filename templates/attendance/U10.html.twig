{% extends 'base.html.twig' %}

{% block title %}Page d'appel - U10

{% endblock %}

{% block body %}

	<div class="col-lg-8 mx-auto p-5 py-md-5">
		<div class="mt-3 text-center">
			<h1 class="h1 mb-2">Page d'appel - U10</h1>
		</div>

		<div class="row row-cols-2 row-cols-md-2 row-cols-lg-4 g-4 pt-5">
			{% for user in users %}
				<div class="col">
					<div
						class="img" data-user-id="{{ user.id }}">
						{# <img src="/images/{{ tbl_user.firstName }}-{{ tbl_user.lastName }}.png" class="card-img-top" alt="..."> #}
						<div class="abs"><img src="/images/arthur-delacour.png" class="card-img-top zoom abs" alt="..."></div>
						<div class="card-body">
							<p class="card-text text-center">{{ user.firstName }}
								{{ user.lastName }}
								({{ user.getCategory }})
								<br>
								{{ user.dateNaissance|date('Y') }}
							</p>
						</div>
					</div>
				</div>
			{% endfor %}
		</div>

		<div class="g-4 pt-5 text-center">
			<button class="btn btn-primary" id="finaliserAppel">Finaliser l'appel</button>
		</div>
	</div>

	<script>
		// JavaScript to add click event listeners to each abs
document.addEventListener('DOMContentLoaded', function () {
const abss = document.querySelectorAll('.abs');

abss.forEach(abs => {
abs.addEventListener('click', function () { // Toggle the 'selected-abs' class to change the color
abs.classList.toggle('selected-abs');
});
});

// Add click event listener to the "Finaliser l'appel" button
const finaliserAppel = document.getElementById('finaliserAppel');
finaliserAppel.addEventListener('click', function () { // Create an array to store the player IDs that should be incremented
const playerIdsToIncrement = [];

// Iterate through abss to find non-selected players
abss.forEach(abs => {
if (!abs.classList.contains('selected-abs')) {
const playerId = abs.getAttribute('data-player-id'); // Get the player ID from data attribute
playerIdsToIncrement.push(playerId);
}
});

// Send a POST request to the server to increment matches_played for selected players
// You would need to set up a server endpoint to handle this request.
// For simplicity, I'll use a placeholder URL here.
fetch('/increment-matches-played', {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(
{playerIds: playerIdsToIncrement}
)
}).then(response => {
if (response.ok) { // Redirect to "/appel" after the update is complete
window.location.href = '/appel';
} else { // Handle any errors here
console.error('Error updating matches played');
}
}).catch(error => {
console.error('Error:', error);
});
});
});
	</script>
{% endblock %}